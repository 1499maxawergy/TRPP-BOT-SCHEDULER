"""–†–∞–±–æ—Ç–∞ —Å .xlsx(excel) —Ñ–∞–π–ª–∞–º–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –†–¢–£ –ú–ò–†–≠–ê —á–µ—Ä–µ–∑ –º–æ–¥—É–ª—å openpyxl"""
import os

import openpyxl

import soup_worker

# –°–ª–æ–≤–∞—Ä—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–∞—Ä {–≥—Ä—É–ø–ø–∞}:{[—Ñ–∞–π–ª], [–∫–æ–ª–æ–Ω–∫–∞]}
group_cell = dict()


# init() - –≤—ã–∑–æ–≤ parse_mirea() –∏ —Å–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ —Å–ª–æ–≤–∞—Ä—è
def __init__():
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –•—ç—à-—Ç–∞–±–ª–∏—Ü—ã –≥—Ä—É–ø–ø

    –ù–∞—Ö–æ–¥–∏—Ç –Ω–∞–∑–≤–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã –≤ —Ç–∞–±–ª–∏—Ü–µ-excel, –∑–∞–ø–æ–º–∏–Ω–∞–µ—Ç
     —Å—Ç–æ–ª–±–µ—Ü –∏ —Ñ–∞–π–ª, –≤ –∫–æ—Ç–æ—Ä–æ–º –±—ã–ª –Ω–∞–π–¥–µ–Ω —Å—Ç–æ–ª–±–µ—Ü"""
    soup_worker.parse_mirea()

    files = [f for f in os.listdir('.') if os.path.isfile(f)]
    for file in files:
        if file.endswith(".xlsx"):
            workbook = openpyxl.load_workbook(file)
            for sheet in workbook:
                for column in range(5, sheet.max_column, 5):
                    if sheet[2][column].value != "–î–µ–Ω—å –Ω–µ–¥–µ–ª–∏":
                        group_cell[sheet[2][column].value] = [file, column, sheet.title]


# is_group_exists() - –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è –≥—Ä—É–ø–ø—ã –≤ —Å–ª–æ–≤–∞—Ä–µ
def is_group_exists(group_name):
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã

    –ü—Ä–æ–≤–µ—Ä–∫–∞, –µ—Å—Ç—å –ª–∏ –∫–ª—é—á –Ω–∞–∑–≤–∞–Ω–∏—è –≥—Ä—É–ø–ø—ã –≤ –¥–∞–Ω–Ω–æ–π
     –•—ç—à-—Ç–∞–±–ª–∏—Ü–µ"""
    if group_cell.get(group_name.upper()) is not None:
        return True
    return False


# print_week() - –≤—ã–≤–æ–¥ –Ω–µ–¥–µ–ª–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –ø–æ –∏–º–µ–Ω–∏ –≥—Ä—É–ø–ø—ã (week: 0 - –Ω–µ—á–µ—Ç–Ω–∞—è, 1 - —á–µ—Ç–Ω–∞—è)
def print_week(group_name, week):
    """–í—ã–≤–æ–¥ –Ω–µ–¥–µ–ª–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –ø–æ –∏–º–µ–Ω–∏ –≥—Ä—É–ø–ø—ã –∏ —á–µ—Ç–Ω–æ—Å—Ç–∏ –Ω–µ–¥–µ–ª–∏

    –ò–º–µ—è –Ω–æ–º–µ—Ä –∫–æ–ª–æ–Ω–∫–∏ excel-—Ç–∞–±–ª–∏—Ü—ã —Å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–π –≥—Ä—É–ø–ø–æ–π,
     –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç —Ä–∞–∑–±–æ—Ä —Ç–∞–±–ª–∏—Ü—ã –∏ –≤—ã—á–ª–µ–Ω–µ–Ω–∏–µ –∏–∑ –Ω–µ–µ –≤–∞–∂–Ω—ã—Ö —è—á–µ–µ–∫ —Å
      –Ω–∞–∑–≤–∞–Ω–∏–µ–º –ø—Ä–µ–¥–º–µ—Ç–∞, –Ω–æ–º–µ—Ä–æ–º –ø–∞—Ä—ã, –≤—Ä–µ–º–µ–Ω–µ–º, –∫–∞–±–∏–Ω–µ—Ç–æ–º"""
    group_name = group_name.upper()

    if group_cell.get(group_name)[1] is not None:
        answer = "```\n"
        if week == 0:
            answer += '‚ö°–ù–µ—á–µ—Ç–Ω–∞—è –Ω–µ–¥–µ–ª—è\n\n'
        else:
            answer += '‚ö°–ß–µ—Ç–Ω–∞—è –Ω–µ–¥–µ–ª—è\n\n'

        excel_filename = group_cell.get(group_name)[0]
        workbook = openpyxl.load_workbook(excel_filename)
        sheet = workbook[group_cell.get(group_name)[2]]

        for day in range(4, 76, 12):
            answer += "üî•" + sheet[day][0].value + '\n'
            for para in range(day + week, day + 12, 2):
                if sheet[para][group_cell[group_name][1]].value != "":
                    if sheet[para][1].value is not None:
                        answer += '‚Ññ' + str(sheet[para][1].value) + '\t'
                        answer += str(sheet[para][2].value) + '\t'
                        answer += str(sheet[para][3].value) + '\t'
                    else:
                        answer += '‚Ññ' + str(sheet[para - 1][1].value) + '\t'
                        answer += str(sheet[para - 1][2].value) + '\t'
                        answer += str(sheet[para - 1][3].value) + '\t'

                    answer += str(sheet[para][group_cell[group_name][1] + 3].value).replace('\n', '/ ') + '\n'
                    if sheet[para][group_cell[group_name][1]].value is not None:
                        answer += str(sheet[para][group_cell[group_name][1]].value) + '\n\n'
                    else:
                        n = para
                        while sheet[n][group_cell[group_name][1]].value is None:
                            n -= 1
                        answer += str(sheet[n][group_cell[group_name][1]].value) + '\n\n'
            answer += '\n\n'

        answer += "```"
        return answer
    else:
        return "–í–∞—à–∞ –≥—Ä—É–ø–ø–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞."


# print_day() - –≤—ã–≤–æ–¥ –¥–Ω—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –ø–æ –∏–º–µ–Ω–∏ –≥—Ä—É–ø–ø—ã –¥–ª—è —Ç–µ–∫—É—â–µ–π –Ω–µ–¥–µ–ª–∏ (1 - –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫, 2 - –≤—Ç–æ—Ä–Ω–∏–∫ ...)
def print_day(group_name, week, day):
    """–í—ã–≤–æ–¥ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –¥–Ω—è –ø–æ –∏–º–µ–Ω–∏ –≥—Ä—É–ø–ø—ã, —á–µ—Ç–Ω–æ—Å—Ç–∏ –Ω–µ–¥–µ–ª–∏ –∏ –Ω–æ–º–µ—Ä–æ–º –¥–Ω—è

    –ê–Ω–∞–ª–æ–≥–∏—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞, –∫–∞–∫ –∏ —É —Ñ—É–Ω–∫—Ü–∏–∏ print_week(), –Ω–æ
     –≤ –¥–∞–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ —É—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è –∏ –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏ (1 - –ü–ù, ..., 7 - –í–°)"""
    group_name = group_name.upper()

    if group_cell.get(group_name)[1] is not None:
        answer = "```\n"
        excel_filename = group_cell.get(group_name)[0]
        workbook = openpyxl.load_workbook(excel_filename)
        sheet = workbook[group_cell.get(group_name)[2]]

        answer += "üî•" + sheet[4 + 12 * (day - 1)][0].value + '\n'
        for para in range(4 + 12 * (day - 1) + week, 16 + 12 * (day - 1), 2):
            if sheet[para][group_cell[group_name][1]].value != "":
                if sheet[para][1].value is not None:
                    answer += '‚Ññ' + str(sheet[para][1].value) + '\t'
                    answer += str(sheet[para][2].value) + '\t'
                    answer += str(sheet[para][3].value) + '\t'
                else:
                    answer += '‚Ññ' + str(sheet[para - 1][1].value) + '\t'
                    answer += str(sheet[para - 1][2].value) + '\t'
                    answer += str(sheet[para - 1][3].value) + '\t'

                answer += str(sheet[para][group_cell[group_name][1] + 3].value).replace('\n', '/ ') + '\n'
                if sheet[para][group_cell[group_name][1]].value is not None:
                    answer += str(sheet[para][group_cell[group_name][1]].value) + '\n\n'
                else:
                    n = para
                    while sheet[n][group_cell[group_name][1]].value is None:
                        n -= 1
                    answer += str(sheet[n][group_cell[group_name][1]].value) + '\n\n'

        answer += "```"
        return answer
    else:
        return "–í–∞—à–∞ –≥—Ä—É–ø–ø–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞."
